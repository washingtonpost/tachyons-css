const path = require("path");
const Fuse = require("fuse.js");
const fs = require("fs-extra");
const postcss = require("postcss");
const getProcesedModule = require("./getProcessedModule");
const selectors = [];

getProcesedModule(path.resolve(__dirname, "../../src/nextra.css")).then(res => {
  postcss.parse(res).walkRules(r => {
    if (!r.selector.includes("root")) {
      let responsive = "all screens";

      switch (r.parent.params) {
        case "only screen and (min-width:768px)":
          responsive = "not small screens";
          break;
        case "only screen and (min-width:768px) and (max-width:1023px)":
          responsive = "only medium screens";
          break;
        case "only screen and (min-width:1024px)":
          responsive = "only large screens";
          break;
        case "only screen and (max-width:767px)":
          responsive = "only small screens";
          break;

        default:
          break;
      }

      const css = r.nodes.map(({prop, value}) => {
        return {
          prop,
          value
        };
      });

      selectors.push({
        className: r.selector.replace(/\./g, " ").replace(" ", ""),
        selector: r.selector,
        css,
        responsive
      });
    }
  });

  const myIndex = Fuse.createIndex(
    ["css.prop", "css.value", "selector", "className", "responsive"],
    selectors
  );
  fs.writeFile("fuse-index.json", JSON.stringify(myIndex.toJSON()));

  fs.writeFile(
    path.resolve(__dirname, "search-data.js"),
    `/* generated by docs/tachyons/build.js */
/* eslint-disable */
    module.exports = ${JSON.stringify(selectors, null, "\t")}`
  );
});
